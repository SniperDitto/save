
오버라이딩(override)
부모 클래스의 메서드를 자식 클래스에서 재정의
@Override로 해당 메서드 위에 어노테이션을 추가한다

upcasting 했다고 모든 클래스 구성이
 부모 클래스의 내용이 되지는 않는다
 -> 원래 자식 클래스가 오버라이딩했던 부모 클래스의 메서드는
    자식클래스의 내용 그대로 쓸 수 있다
 -> 부모클래스에 없던 내용들만 쓸 수 없음


객체 지향의 3대 요소
1. 상속
2. 추상화
3. 캡슐화 - 접근제한자 이용


접근제한자
public
protected
    - 메서드를 다른 패키지에서 볼 수 없음(미리보기, 자동완성 등 x)
default(생략가능) 
    - 같은 패키지 내에서만 접근 가능
    - import pkg.* 등으로도 접근 불가
private
    - 같은 클래스 안에서만 사용 가능
    - 다른 클래스, 패키지에서 볼 수는 있음

기본적으로 private로 변수를 만든다
--> getter, setter로 제어 가능
- 다른 클래스에서 볼 수 있는지(getter)
- 고칠 수 있는지(setter)




class
- public(공개)
- default(비공개) : 같은 패키지만 접근

field, method
- public
- private 
    메서드의 경우 함수처럼 클래스 안에서만 쓸 때 사용
    같은 클래스 내에서만 보임
- protected
    같은 패키지 내에서만 보임
    혼자 개발 시 잘 쓸 일 없음
