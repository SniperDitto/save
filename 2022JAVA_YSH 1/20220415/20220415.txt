

업무 중심
업무(게시판) 중심으로 나머지 객체 생각하기
    - user, dbHandle ...

static
    선언하지 않아도 항상 메모리에 상주


java collection 보기
java.util 보기

--------------------

DB 관리 클래스
    - DB 접속 위한 url, id, pw
    - inline인지 procedure 사용할 것인지
    - url, id, pw로 객체 생성
    - Connection 만들어 리턴
        1) 드라이버
            Class.forName("oracle.jdbc.driver.OracleDriver");
        2) Connection
            dbCon = DriverManager.getConnection(url, id, pw);
    - PreparedStatement 만들어 리턴(inline)
        - sql문, 인자 배열
        1) Connection 메서드로 객체 만들기
            Connection conn = getConn();
        2) prepareStatement로 sql쿼리 만들기
            ps = conn.prepareStatement(sql);
            ps.setNString(i, s);
    - CallableStatement 만들어 리턴(procedure)
        - sql문, 인자 배열
        1) Connection 메서드로 객체 만들기
        2) prepareCall로 sql쿼리 만들기
            cs = conn.prepareCall(sql);
            cs.setNString(i, s);
    - select문 메서드
        - sql문, 인자 배열, 분류, o_cur 사용여부
        - 바뀐 갯수 return
    - insert, update, delete문 메서드
        - sql문, 인자 배열, 분류
        - 바뀐 갯수 return 
inline, procedure 종류 enum
DB 접속 정보 static으로 띄우기(url, id, pw)


게시판 클래스
    - idx, 제목, 작성자(user객체), db관리객체
    - 생성자에서 db관리객체 만들기
    - 글 작성
        - 작성자 받아와서 나머지는 procedure로 처리
        - 글제목 내용 입력받기
        - 로그인되어 있어야만 글 작성 가능
    - 글 전체 목록, 검색된 글 목록
        - resultset 이용하기
    - 글 작성내용 입력받기
        - scanner 이용하기
    
사람 클래스
    - 로그인 시 입력받는 id,pw
    - 사람id, 이름, 로그인여부, db관리객체
    - 로그인
        - 
    - 로그인 내용 입력받기
        - scanner 이용하기


예외처리 그냥 Exception으로 묶어서