/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-04-27 04:32:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._02_005fclient._01_005fboards;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import oracle.jdbc.OracleTypes;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.CallableStatement;
import java.sql.Connection;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.CallableStatement");
    _jspx_imports_classes.add("oracle.jdbc.OracleTypes");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"../js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>글작성</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/board.css\">\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	var chkVal = function(){\r\n");
      out.write("		var userID = $(\"#userID\").val();\r\n");
      out.write("		var title = $(\"#title\").val();\r\n");
      out.write("		var content = $(\"#content\").val();\r\n");
      out.write("		/*if(userID.length<1){\r\n");
      out.write("			alert(\"작성자를 입력해주세요\");\r\n");
      out.write("			$(\"#userID\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		else */\r\n");
      out.write("			if(title.length<1){\r\n");
      out.write("			alert(\"글제목을 입력해주세요\");\r\n");
      out.write("			$(\"#title\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		else if(content.length<1){\r\n");
      out.write("			alert(\"내용이 비어있습니다\");\r\n");
      out.write("			$(\"#content\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$(\"#boardForm\").submit();\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String strIDX = request.getParameter("idx");

	String id = "scores";
	String pw = "1";
	String url = "jdbc:oracle:thin:@localhost:1521:XE";
	
	try{
		//db연결
		Connection dbCon = null;
		CallableStatement cs = null;
		ResultSet rs = null;
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		dbCon = DriverManager.getConnection(url,id,pw);
		//select
		//O_CUR의 갯수가 여러개일 수도 있음(주의)
		String procName = "{call PKG_BOARDS.PROC_SEL_BOARD_CONTENT(?,?)}";
		
		cs = dbCon.prepareCall(procName);
		cs.setString(1, strIDX);
		cs.registerOutParameter(2, OracleTypes.CURSOR);
		
		cs.executeQuery();
		
		rs = (ResultSet) cs.getObject(2);
		while(rs.next()){

      out.write("\r\n");
      out.write("	<div>\r\n");
      out.write("		글수정페이지\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"../../index.jsp\">home</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<form method=\"post\" action=\"./update_ok.jsp\" name=\"boardForm\" id=\"boardForm\" ><!-- onsubmit=\"return chkVal()\" -->\r\n");
      out.write("	<input type=\"hidden\" name=\"idx\" value=\"");
      out.print(rs.getString("IDX"));
      out.write("\"/>\r\n");
      out.write("	<table cellpadding=\"0\" cellspacing=\"0\" width=\"600px\" align=\"center\" border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"120px\" height=\"30px\" align=\"center\">작성자</td>\r\n");
      out.write("			<td width=\"480px\" height=\"30px\" align=\"center\" name=\"userID\">\r\n");
      out.write("				");
      out.print(rs.getString("USERID"));
      out.write("\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"120px\" height=\"30px\" align=\"center\">글제목</td>\r\n");
      out.write("			<td width=\"480px\" height=\"30px\" align=\"center\">\r\n");
      out.write("				<input type=\"text\" name=\"title\" id=\"title\" class=\"text1\" style=\"width:470px;height:30px\" value=\"");
      out.print(rs.getString("TITLE"));
      out.write("\"/>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"600px\" height=\"120px\" align=\"center\" colspan=\"2\">\r\n");
      out.write("				<textarea name=\"content\" id=\"content\" class=\"text1\" style=\"width:590px;height:230px\">");
      out.print(rs.getString("CONTENT"));
      out.write("</textarea>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"600\" height=\"30px\" align=\"center\" colspan=\"2\">\r\n");
      out.write("				<input type=\"button\" value=\"수정\" onclick=\"chkVal()\"/>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</form>\r\n");
	
		}
	}catch(Exception e){
		e.printStackTrace();
	} 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
