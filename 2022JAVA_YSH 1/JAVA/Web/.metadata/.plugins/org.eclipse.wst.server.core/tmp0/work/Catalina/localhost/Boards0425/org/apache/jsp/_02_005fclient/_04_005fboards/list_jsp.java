/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-13 02:34:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._02_005fclient._04_005fboards;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>글 목록</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/board.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/board.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"init()\">\r\n");

	request.setCharacterEncoding("UTF-8");
	String loginID = (String)session.getAttribute("userID");
	String hMenuID = request.getParameter("hMenuID");
	String lMenuID = request.getParameter("lMenuID");
	out.print("대분류 : "+hMenuID);
	out.print(" / 소분류 : "+lMenuID);
	out.print(" / 로그인한 사람 : "+loginID);
	if(lMenuID==null){
		//lMenu 선택 안한 상태
		hMenuID = "MENU01";
		lMenuID = "";
	}else{
		//lMenu 선택해서 새로고침됨
	}
	
	

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("var init = function(){\r\n");
      out.write("	getHMenuList();\r\n");
      out.write("	getLMenuList(\"");
      out.print(hMenuID );
      out.write("\");\r\n");
      out.write("	getBoardList(\"");
      out.print(lMenuID );
      out.write("\");\r\n");
      out.write("}\r\n");
      out.write("var goWrite = function(){\r\n");
      out.write("	location.href=\"./write.jsp?hMenuID=");
      out.print(hMenuID );
      out.write("&lMenuID=");
      out.print(lMenuID);
      out.write("\";\r\n");
      out.write("}\r\n");
      out.write("var go_content = function(idx,regnum, lvl, combine, ord,delnum){\r\n");
      out.write("	document.getElementById(\"idx\").value = idx;\r\n");
      out.write("	document.getElementById(\"regnum\").value = regnum;\r\n");
      out.write("	document.getElementById(\"lvl\").value = lvl;\r\n");
      out.write("	document.getElementById(\"combine\").value = combine;\r\n");
      out.write("	document.getElementById(\"ord\").value = ord;\r\n");
      out.write("	document.getElementById(\"delnum\").value = delnum;\r\n");
      out.write("	\r\n");
      out.write("	document.getElementById(\"hiddenForm\").submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<form name=\"hiddenForm\" action=\"./content.jsp\" method=\"post\" id=\"hiddenForm\">\r\n");
      out.write("	<input type=\"hidden\" name=\"idx\" id=\"idx\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"regnum\" id=\"regnum\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"lvl\" id=\"lvl\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"combine\" id=\"combine\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"ord\" id=\"ord\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"delnum\" id=\"delnum\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"hMenuID\" value=\"");
      out.print(hMenuID );
      out.write("\"/>\r\n");
      out.write("	<input type=\"hidden\" name=\"lMenuID\" value=\"");
      out.print(lMenuID );
      out.write("\"/>\r\n");
      out.write("</form>\r\n");
      out.write("	<div>\r\n");
      out.write("		<span>list</span>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"./list.jsp\">홈으로</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"./02_client/01_boards/write.jsp\">글쓰기</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"./02_client/01_boards/list.jsp\">글목록</a>\r\n");
      out.write("	</div>\r\n");
      out.write("<!-- 상단메뉴테이블시작 -->\r\n");
      out.write("<div>\r\n");
      out.write("<table width=\"800px\" align=\"center\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("	<tr id=\"hMenus\">\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 상단메뉴테이블끝 -->\r\n");
      out.write("<!-- 하단메뉴테이블시작 -->\r\n");
      out.write("<div>\r\n");
      out.write("<table width=\"800px\" align=\"center\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td width=\"200px\" height=\"600px\" align=\"center\" valign=\"top\">\r\n");
      out.write("			<!-- 서브메뉴테이블 -->\r\n");
      out.write("			<div id=\"LMenus\"></div>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td width=\"600px\" height=\"600px\" align=\"center\" valign=\"top\">\r\n");
      out.write("			<!-- 로그인시작 -->\r\n");
      out.write("			<div id=\"login\">\r\n");
      out.write("			");
if(loginID==null){ 
      out.write("\r\n");
      out.write("				<form method=\"post\" action=\"./login_ok.jsp\" name=\"loginForm\">\r\n");
      out.write("					<div id=\"chkMsg\"></div>\r\n");
      out.write("					아이디 : <input type=\"text\" name=\"userID\" id=\"userID\" onblur=\"checkID()\"/>&nbsp;&nbsp;\r\n");
      out.write("					비밀번호 : <input type=\"password\" name=\"userPass\" id=\"userPass\"/>&nbsp;&nbsp;\r\n");
      out.write("					<!-- ajax login -->\r\n");
      out.write("					<!--<input type=\"button\" value=\"로그인\" onclick=\"userLogin()\"/>  -->\r\n");
      out.write("					<!-- ajax login end -->\r\n");
      out.write("					<input type=\"submit\" value=\"로그인\"/>\r\n");
      out.write("				</form>\r\n");
      out.write("			");
}else{
      out.write("\r\n");
      out.write("				<div>");
      out.print(loginID );
      out.write(" 계정으로 로그인됨</div>\r\n");
      out.write("				<input type='button' value='로그아웃' onclick='userLogout()'/>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 로그인끝 -->\r\n");
      out.write("			<!-- 내용시작 -->\r\n");
      out.write("			");
if(loginID!=null){ 
      out.write("\r\n");
      out.write("			<div id=\"boards\"></div>\r\n");
      out.write("				");
if(lMenuID!="" && lMenuID!=null){ 
      out.write("\r\n");
      out.write("			<div>\r\n");
      out.write("				<input type=\"button\" value=\"글쓰기\" onclick=\"goWrite()\"/>\r\n");
      out.write("			</div>\r\n");
      out.write("				");
}
      out.write("\r\n");
      out.write("				\r\n");
      out.write("			");
}else{
      out.write("\r\n");
      out.write("				<div>로그인 후 내용이 표시됩니다</div>\r\n");
      out.write("			");
}
      out.write("\r\n");
      out.write("			<!-- 내용끝 -->\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 하단메뉴테이블끝 -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
