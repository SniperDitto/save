/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-02 07:55:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._01_005fadmin._01_005fboards;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import Pkg.DB.DBConn;
import java.util.ArrayList;
import Pkg.Admin.Board.BoardList2;
import Pkg.Admin.Board.BoardVO2;

public final class board2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Pkg.DB.DBConn");
    _jspx_imports_classes.add("Pkg.Admin.Board.BoardVO2");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("Pkg.Admin.Board.BoardList2");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write("var addRow = function(){\r\n");
      out.write("	var objDiv = document.createElement(\"DIV\");\r\n");
      out.write("	\r\n");
      out.write("	var objInputs = [];\r\n");
      out.write("	for(var i=0;i<6;i++){\r\n");
      out.write("		objInputs[i] = document.createElement(\"INPUT\");\r\n");
      out.write("	}\r\n");
      out.write("	objInputs[0].setAttribute(\"type\",\"checkbox\");\r\n");
      out.write("	objInputs[0].setAttribute(\"name\",\"chks\");\r\n");
      out.write("	objInputs[0].setAttribute(\"value\",\"0\");\r\n");
      out.write("	\r\n");
      out.write("	objInputs[1].setAttribute(\"type\",\"text\");\r\n");
      out.write("	objInputs[1].setAttribute(\"name\",\"idxs\");\r\n");
      out.write("	objInputs[1].setAttribute(\"value\",\"0\");\r\n");
      out.write("	\r\n");
      out.write("	objInputs[2].setAttribute(\"type\",\"text\");\r\n");
      out.write("	objInputs[2].setAttribute(\"name\",\"titles\");\r\n");
      out.write("	\r\n");
      out.write("	objInputs[3].setAttribute(\"type\",\"text\");\r\n");
      out.write("	objInputs[3].setAttribute(\"name\",\"userIDs\");\r\n");
      out.write("	\r\n");
      out.write("	objInputs[4].setAttribute(\"type\",\"text\");\r\n");
      out.write("	objInputs[4].setAttribute(\"name\",\"regdates\");\r\n");
      out.write("	objInputs[4].setAttribute(\"readonly\",\"true\");\r\n");
      out.write("\r\n");
      out.write("	objInputs[5].setAttribute(\"type\",\"hidden\");\r\n");
      out.write("	objInputs[5].setAttribute(\"name\",\"gbns\");\r\n");
      out.write("	objInputs[5].setAttribute(\"value\",\"i\");\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	var objSpans = [];\r\n");
      out.write("	for(var i=0;i<6;i++){\r\n");
      out.write("		objSpans[i] = document.createElement(\"SPAN\");\r\n");
      out.write("		objSpans[i].appendChild(objInputs[i]);\r\n");
      out.write("		objDiv.appendChild(objSpans[i]);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	BoardList2 board2 = new BoardList2();
	ArrayList<BoardVO2> aList = board2.getBoardList();

	

      out.write("\r\n");
      out.write("<div id=\"btns\">\r\n");
      out.write("	<a href=\"javascript:addRow()\">추가</a>\r\n");
      out.write("	<a href=\"\">저장</a>\r\n");
      out.write("	<a href=\"javascript:submitFunc()\">삭제</a>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"board\">\r\n");
for(BoardVO2 vo2 : aList){
      out.write("\r\n");
      out.write("	<span>\r\n");
      out.write("		<input type=\"checkbox\" name=\"chks\" value=\"");
      out.print(vo2.getIdx() );
      out.write("\"/>\r\n");
      out.write("	</span>\r\n");
      out.write("	<span>\r\n");
      out.write("		<input type=\"text\" name=\"idxs\" value=\"");
      out.print(vo2.getIdx() );
      out.write("\" readonly/>\r\n");
      out.write("	</span>\r\n");
      out.write("	<span>\r\n");
      out.write("		<input type=\"text\" name=\"titles\" value=\"");
      out.print(vo2.getTitle() );
      out.write("\" readonly/>\r\n");
      out.write("	</span>\r\n");
      out.write("	<span>\r\n");
      out.write("		<input type=\"text\" name=\"users\" value=\"");
      out.print(vo2.getUserID() );
      out.write("\" readonly/>\r\n");
      out.write("	</span>\r\n");
      out.write("	<span>\r\n");
      out.write("		<input type=\"text\" name=\"regdates\" value=\"");
      out.print(vo2.getRegdate() );
      out.write("\" readonly/>\r\n");
      out.write("	</span>\r\n");
      out.write("	<br/>\r\n");
}
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
