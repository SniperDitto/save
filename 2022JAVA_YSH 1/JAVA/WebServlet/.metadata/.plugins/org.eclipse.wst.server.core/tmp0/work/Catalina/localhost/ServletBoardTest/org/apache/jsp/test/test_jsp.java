/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-19 08:18:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.test;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Hashtable;
import pkg.test.testVO;
import java.util.ArrayList;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("pkg.test.testVO");
    _jspx_imports_classes.add("java.util.Hashtable");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script\r\n");
      out.write("  src=\"https://code.jquery.com/jquery-3.6.0.js\"\r\n");
      out.write("  integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\"\r\n");
      out.write("  crossorigin=\"anonymous\"></script>\r\n");
      out.write("<title>web page 제작에 대한 고찰</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	ArrayList<testVO> arrA = (ArrayList<testVO>)request.getAttribute("listA");
	ArrayList<testVO> arrB = (ArrayList<testVO>)request.getAttribute("listB");
	ArrayList<testVO> arrC = (ArrayList<testVO>)request.getAttribute("listC");
	ArrayList<testVO> arrD = (ArrayList<testVO>)request.getAttribute("listD");
	
	

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var gbn2_A = 1;var gbn2_B = 1;var gbn2_C = 1;var gbn2_D = 1;\r\n");
      out.write("	const maxMap = new Map();\r\n");
      out.write("\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		$(\"#nextA\").click(function(){\r\n");
      out.write("			funcNext(1, \"A\", gbn2_A);\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#nextB\").click(function(){\r\n");
      out.write("			funcNext(1, \"B\", gbn2_B);\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#nextC\").click(function(){\r\n");
      out.write("			funcNext(1, \"C\", gbn2_C);\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#nextD\").click(function(){\r\n");
      out.write("			funcNext(1, \"D\", gbn2_D);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#prevA\").click(function(){\r\n");
      out.write("			funcNext(0, \"A\", gbn2_A);\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#prevB\").click(function(){\r\n");
      out.write("			funcNext(0, \"B\", gbn2_B);\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#prevC\").click(function(){\r\n");
      out.write("			funcNext(0, \"C\", gbn2_C);\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#prevD\").click(function(){\r\n");
      out.write("			funcNext(0, \"D\", gbn2_D);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	var funcNext = function(prevOrNext, category, gbn){\r\n");
      out.write("		var maxG = maxMap.get(category);\r\n");
      out.write("		\r\n");
      out.write("		prevOrNext==1? gbn++ : gbn-- ;\r\n");
      out.write("		\r\n");
      out.write("		if(gbn>maxG){\r\n");
      out.write("			gbn=1;\r\n");
      out.write("		}else if(gbn<1){\r\n");
      out.write("			gbn=maxG;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(category==\"A\"){\r\n");
      out.write("			gbn2_A = gbn;\r\n");
      out.write("		} else if(category==\"B\"){\r\n");
      out.write("			gbn2_B = gbn;\r\n");
      out.write("		} else if(category==\"C\"){\r\n");
      out.write("			gbn2_C = gbn;\r\n");
      out.write("		} else if(category==\"D\"){\r\n");
      out.write("			gbn2_D = gbn;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			datatype : \"json\",\r\n");
      out.write("			data : {\r\n");
      out.write("				strURL : category,\r\n");
      out.write("				gbn2 : gbn\r\n");
      out.write("			},\r\n");
      out.write("			type : \"get\",\r\n");
      out.write("			url : \"test.do\",\r\n");
      out.write("			async : true,\r\n");
      out.write("			success : function(obj){\r\n");
      out.write("				maxMap.set(category,this.MAXGBN2);\r\n");
      out.write("				var strHTML = '<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">';\r\n");
      out.write("				$(obj).each(function(){\r\n");
      out.write("					strHTML += '<tr>';\r\n");
      out.write("					strHTML += '<td width=\"100px\" align=\"center\" height=\"30\">';\r\n");
      out.write("						strHTML += this.FID;\r\n");
      out.write("					strHTML += '</td>';\r\n");
      out.write("					strHTML += '<td width=\"250px\" align=\"center\" height=\"30\">';\r\n");
      out.write("						strHTML += this.FNAME;\r\n");
      out.write("					strHTML += '</td>';\r\n");
      out.write("					strHTML += '</tr>';\r\n");
      out.write("				})\r\n");
      out.write("				strHTML += '</table>';\r\n");
      out.write("				\r\n");
      out.write("				$(\"#table\"+category).html(strHTML);\r\n");
      out.write("				\r\n");
      out.write("			},\r\n");
      out.write("			fail : function(){\r\n");
      out.write("				alert(\"쉴패~~~!!~!\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"700px\" align=\"center\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td width=\"700px\" height=\"30px\" align=\"right\" colspan=\"2\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"700px\" align=\"center\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td width=\"350px\" height=\"300px\" align=\"center\" valign=\"top\">\r\n");
      out.write("			<div>\r\n");
      out.write("			<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td width=\"350px\" height=\"30px\" align=\"center\">\r\n");
      out.write("						<input type=\"button\" id=\"prevA\" name=\"btn\" value=\"←\"/>\r\n");
      out.write("						<input type=\"button\" id=\"nextA\" name=\"btn\" value=\"→\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"tableA\">\r\n");
      out.write("				<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				");
 for(testVO vo : arrA){ 
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width=\"100px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfID() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("						<td width=\"250px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfName() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");
 } 
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td width=\"350px\" height=\"300px\" align=\"center\" valign=\"top\">\r\n");
      out.write("			<div>\r\n");
      out.write("			<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td width=\"350px\" height=\"30px\" align=\"center\">\r\n");
      out.write("						<input type=\"button\" id=\"prevB\" name=\"btn\" value=\"←\"/>\r\n");
      out.write("						<input type=\"button\" id=\"nextB\" name=\"btn\" value=\"→\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"tableB\">\r\n");
      out.write("				<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				");
 for(testVO vo : arrB){ 
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width=\"100px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfID() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("						<td width=\"250px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfName() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");
 } 
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td width=\"350px\" height=\"300px\" align=\"center\" valign=\"top\">\r\n");
      out.write("			<div>\r\n");
      out.write("			<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td width=\"350px\" height=\"30px\" align=\"center\">\r\n");
      out.write("						<input type=\"button\" id=\"prevC\" name=\"btn\" value=\"←\"/>\r\n");
      out.write("						<input type=\"button\" id=\"nextC\" name=\"btn\" value=\"→\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"tableC\">\r\n");
      out.write("				<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				");
 for(testVO vo : arrC){ 
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width=\"100px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfID() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("						<td width=\"250px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfName() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");
 } 
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td width=\"350px\" height=\"300px\" align=\"center\" valign=\"top\">\r\n");
      out.write("			<div>\r\n");
      out.write("			<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td width=\"350px\" height=\"30px\" align=\"center\">\r\n");
      out.write("						<input type=\"button\" id=\"prevD\" name=\"btn\" value=\"←\"/>\r\n");
      out.write("						<input type=\"button\" id=\"nextD\" name=\"btn\" value=\"→\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"tableD\">\r\n");
      out.write("				<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"350px\" align=\"center\">\r\n");
      out.write("				");
 for(testVO vo : arrD){ 
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td width=\"100px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfID() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("						<td width=\"250px\" align=\"center\" height=\"30\">\r\n");
      out.write("							");
      out.print(vo.getfName() );
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");
 } 
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
