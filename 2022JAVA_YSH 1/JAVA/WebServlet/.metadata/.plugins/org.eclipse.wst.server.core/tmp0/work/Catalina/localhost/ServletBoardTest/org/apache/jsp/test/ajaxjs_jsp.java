/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-20 02:56:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.test;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajaxjs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"\r\n");
      out.write("  integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\"\r\n");
      out.write("  crossorigin=\"anonymous\"></script>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>a</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		$(\"#btnOk\").click(clickFunc);\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	var clickFunc = function(){\r\n");
      out.write("		var vars = [];\r\n");
      out.write("		vars[0] = \"sid\";\r\n");
      out.write("		vars[1] = \"sname\";\r\n");
      out.write("		vars[2] = \"sinfo\";\r\n");
      out.write("		vars[3] = \"jspURL\";\r\n");
      out.write("		\r\n");
      out.write("		var params = [];\r\n");
      out.write("		params[0] = \"123123\";\r\n");
      out.write("		params[1] = \"123123123\";\r\n");
      out.write("		params[2] = \"asdfasdfsafasdfasdasdf\";\r\n");
      out.write("		params[3] = \"ajaxJSON\";\r\n");
      out.write("		\r\n");
      out.write("		var objA = getAjaxObj(\"stock.do\", dataFunc(vars, params),\"get\",true,\"json\",successFunc,errorFunc);\r\n");
      out.write("		ajaxExec(objA);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var dataFunc = function(vars, params){\r\n");
      out.write("		var strJson = \"\";\r\n");
      out.write("		strJson += \"{\";\r\n");
      out.write("		for(var i=0;vars.length;i++){\r\n");
      out.write("			strJson += '\"'+vars[i]+'\"';\r\n");
      out.write("			strJson += \":\";\r\n");
      out.write("			strJson += '\"'+params[i]+'\"';\r\n");
      out.write("			\r\n");
      out.write("			i!=(vars.length-1) ? strJson+=\",\" : strJson+=\"\" ;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		strJson += \"}\";\r\n");
      out.write("		\r\n");
      out.write("		var objJson = JSON.parse(strJson);\r\n");
      out.write("		return objJson;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var getAjaxObj = function(url, data, type, async, dataType, success, error){\r\n");
      out.write("		var obj = {};\r\n");
      out.write("		obj.url = url;\r\n");
      out.write("		obj.data = data;\r\n");
      out.write("		obj.type = type;\r\n");
      out.write("		obj.async = async;\r\n");
      out.write("		obj.dataType = dataType;\r\n");
      out.write("		obj.success = success;\r\n");
      out.write("		obj.fail = fail;\r\n");
      out.write("		\r\n");
      out.write("		return obj;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var ajaxExec = function(obj){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url : obj.url,\r\n");
      out.write("			data : obj.data,\r\n");
      out.write("			type : obj.type,\r\n");
      out.write("			async : obj.async,\r\n");
      out.write("			dataType : obj.dataType,\r\n");
      out.write("			success : obj.success,\r\n");
      out.write("			error : obj.error\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var successFunc = function(obj){\r\n");
      out.write("		var strHTML = \"\";\r\n");
      out.write("		$(obj).each(function(){\r\n");
      out.write("			strHTML += \"<div>\";\r\n");
      out.write("			strHTML += this.sid +\"/\"+ this.sname +\"/\"+ this.sinfo;\r\n");
      out.write("			strHTML += \"</div>\";\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#msg\").html(strHTML);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var errorFunc = function(){\r\n");
      out.write("		alert(\"쉴패~~!~!\");\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"msg\"></div>\r\n");
      out.write("	<input type=\"button\" value=\"확인\" id=\"btnOk\"/>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
