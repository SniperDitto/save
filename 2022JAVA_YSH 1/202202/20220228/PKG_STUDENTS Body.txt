create or replace NONEDITIONABLE PACKAGE BODY PKG_STUDENTS AS
    --BODY부분
    
    -------------------------1
  PROCEDURE PROC_INS_STUDENTS
    (
        --패키지 안의 프로시져는 매개변수만 표시 ->본문 생성하면 뒤에 생김
        IN_STU_NAME IN VARCHAR2 
        , IN_STU_TEL IN VARCHAR2 
        , IN_STU_ADDR_GRP IN VARCHAR2 
        , IN_STU_ADDR IN VARCHAR2 
        , IN_STU_DEPT_GRP IN VARCHAR2 
        , IN_STU_DEPT IN VARCHAR2 
        , IN_STU_ADDR2 IN VARCHAR2 
    ) AS
    
    V_NEW_STU_ID    VARCHAR2(6);
    
  BEGIN
        --프로시져내용
        --PL/SQL PROGRAMMING
        SELECT 'STU'||TO_CHAR(TO_NUMBER(SUBSTR(MAX(STU_ID),4,3))+1,'FM000')
        INTO V_NEW_STU_ID   -- ROW 한개일 때만 가능
        FROM STUDENTS_TBL;
    
        
        INSERT INTO STUDENTS_TBL(STU_ID, STU_NAME, STU_TEL, STU_ADDR_GRP, STU_ADDR, STU_DEPT_GRP, STU_DEPT, STU_ADDR2)
        VALUES(
            V_NEW_STU_ID,
            IN_STU_NAME,
            IN_STU_TEL,
            IN_STU_ADDR_GRP,
            IN_STU_ADDR,
            IN_STU_DEPT_GRP,
            IN_STU_DEPT,
            IN_STU_ADDR2
        );
  END PROC_INS_STUDENTS;
  
  
  
  
  ----------------------------2
  
      PROCEDURE PROC_SEL_STUDENTS
    (
        IN_STU_ID       IN      VARCHAR2
        ,IN_STU_NAME    IN      VARCHAR2
        ,O_CURSOR       OUT     SYS_REFCURSOR
    )
    AS
    
    BEGIN
        
        OPEN O_CURSOR FOR
        SELECT * FROM STUDENTS_TBL
        WHERE STU_ID LIKE '%'||IN_STU_ID||'%'
        AND STU_NAME LIKE '%'||IN_STU_NAME||'%'
        ;
        
    END PROC_SEL_STUDENTS;
    
    
    ------------------------3
    PROCEDURE PROC_UP_STUDENTS
    (
        IN_STU_ID IN VARCHAR2
        , IN_STU_NAME IN VARCHAR2 
        , IN_STU_TEL IN VARCHAR2 
        , IN_STU_ADDR_GRP IN VARCHAR2 
        , IN_STU_ADDR IN VARCHAR2 
        , IN_STU_DEPT_GRP IN VARCHAR2 
        , IN_STU_DEPT IN VARCHAR2 
        , IN_STU_ADDR2 IN VARCHAR2 
        , IN_STU_PASS IN VARCHAR2 
    )
    AS
    BEGIN
        UPDATE STUDENTS_TBL
        SET STU_NAME=IN_STU_NAME,
            STU_TEL=IN_STU_TEL,
            STU_ADDR_GRP=IN_STU_ADDR_GRP,
            STU_ADDR=IN_STU_ADDR,
            STU_DEPT_GRP=IN_STU_DEPT_GRP,
            STU_DEPT=IN_STU_DEPT,
            STU_ADDR2=IN_STU_ADDR2,
            STU_PASS=IN_STU_PASS
        WHERE STU_ID=IN_STU_ID;
        
    END PROC_UP_STUDENTS;
    
    ------------------------4
    
    PROCEDURE PROC_DEL_STUDENT
    (
        IN_STU_ID       IN      VARCHAR2
        --에러처리
        ,O_ERRCODE      OUT VARCHAR2
        ,O_ERRMSG       OUT VARCHAR2
    )
    AS
        V_STUDENTS_CNT  NUMBER(1);
        V_STUTIME_CNT  NUMBER(1);
        V_SCORE_CNT  NUMBER(1);
        
        STUDENTS_DEL_EXCEPTION  EXCEPTION;
        STUTIME_DEL_EXCEPTION  EXCEPTION;
        SCORES_DEL_EXCEPTION  EXCEPTION;
        
    BEGIN
        
        
        --학생에 관련된 모든 데이터도 삭제되어야 한다
        --성적, 시간표 등
        --이렇게 동시에 처리되어야 하는 업무 묶음을 트랜잭션이라 한다.
        --ALL OR NOTHING
        
        
        --1. 학생 삭제
        --학생이 존재하는지 확인
        SELECT DECODE(MAX(STU_ID),NULL,0,1)
        INTO V_STUDENTS_CNT
        FROM STUDENTS_TBL
        WHERE STU_ID=IN_STU_ID
        ;
        IF V_STUDENTS_CNT=0 THEN
            --에러발생 + 예외처리
            RAISE STUDENTS_DEL_EXCEPTION;
        ELSE
            DELETE FROM STUDENTS_TBL
            WHERE STU_ID=IN_STU_ID
            ;
        END IF;
        
        --2. 시간표 삭제
        --시간표에 존재하는지 확인
        SELECT DECODE(MAX(STU_ID),NULL,0,1)
        INTO V_STUTIME_CNT
        FROM STUDENTS_TIME_TBL
        WHERE STU_ID=IN_STU_ID
        ;
        IF V_STUTIME_CNT=0 THEN
            --에러발생 + 예외처리
            RAISE STUTIME_DEL_EXCEPTION;
        ELSE
            DELETE FROM STUDENTS_TIME_TBL
            WHERE STU_ID = IN_STU_ID
            ;
        END IF;
        
        
        --3. 성적 삭제
        --성적데이터에 존재하는지 확인
        SELECT DECODE(MAX(STU_ID),NULL,0,1)
        INTO V_SCORE_CNT
        FROM SCORES_TBL
        WHERE STU_ID=IN_STU_ID
        ;
        IF V_SCORE_CNT=0 THEN
            --에러발생 + 예외처리
            RAISE SCORES_DEL_EXCEPTION;
        ELSE
            DELETE FROM SCORES_TBL
            WHERE STU_ID=IN_STU_ID
            ;
        END IF;
        
        
        -- 예외 처리 추가
        EXCEPTION
        WHEN STUDENTS_DEL_EXCEPTION THEN
            O_ERRCODE := 'ERR001';
            O_ERRMSG := '삭제할 학생이 존재하지 않음';
            ROLLBACK;
        WHEN STUTIME_DEL_EXCEPTION THEN
            O_ERRCODE := 'ERR002';
            O_ERRMSG := '삭제할 시간표가 존재하지 않음';
            ROLLBACK;
        WHEN SCORES_DEL_EXCEPTION THEN
            O_ERRCODE := 'ERR003';
            O_ERRMSG := '삭제할 점수가 존재하지 않음';
            ROLLBACK;
        WHEN OTHERS THEN
            O_ERRCODE := SQLCODE;
            O_ERRMSG := SQLERRM;
            
        
    END PROC_DEL_STUDENT;
    
    
    
    --------------------------5
    
    PROCEDURE PROC_REQ_SUBJECT_LIST
    (
        IN_STU_ID       IN      VARCHAR2
        ,IN_STU_NAME    IN      VARCHAR2 
        ,O_CURSOR       OUT     SYS_REFCURSOR
    )
    AS
    BEGIN
        OPEN O_CURSOR FOR
        SELECT ST.STU_ID AS 학생아이디,
            ST.STU_NAME AS 이름,
            D.DEPT AS 소속학과,
            SJ.SUB_ID AS 신청과목아이디,
            SJ.SUB_NAME AS 신청과목,
            SJ.SUB_CREDIT AS 학점
        FROM STUDENTS_TBL ST,
            SUBJECTS_TBL SJ,
            STUDENTS_TIME_TBL STT,
        (
                --학과
                SELECT 
                    DECODE(T1.COM_VAL,'ROOT','',T1.COM_VAL)||' '||T2.COM_VAL AS DEPT,
                    T1.GRP_ID AS GID,
                    T1.COM_ID AS CID1,
                    T2.COM_ID AS CID2
                FROM COMMONS_TBL T1, COMMONS_TBL T2
                WHERE T1.COM_ID=T2.PARENT_ID
                    AND T1.GRP_ID='GRP002' 
                    AND T1.GRP_ID=T2.GRP_ID
                    AND T2.COM_LVL=2
        ) D
        WHERE ST.STU_ID=STT.STU_ID
            AND SJ.SUB_ID=STT.SUB_ID
            AND ST.STU_ID LIKE '%'||IN_STU_ID||'%'
            AND ST.STU_NAME LIKE '%'||IN_STU_NAME||'%'
            AND ST.STU_DEPT_GRP=D.GID AND ST.STU_DEPT=D.CID2
        ORDER BY ST.STU_ID ASC
        ;
        
    END PROC_REQ_SUBJECT_LIST;
    
    

END PKG_STUDENTS;