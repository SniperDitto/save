javascript
java -> jsp, servlet, spring

database - oracle, sql, ...

객체(object, class)
 - 속성(property, attribute)
 - 행위(method)

c++, c#, java는 객체 지향 언어(함수 X)
c, javascript (함수 O)



function -> 필요한 기능을 만들어 반복해서 사용


onclick -> event handler 이벤트처리


전역 변수와 지역 변수
var : 변수를 선언한 이후 메모리에 저장할 공간 확보 -> cpu가 사용
1. 변수 선언
2. 메모리에 저장
3. cpu가 사용

지역 변수(local variable)
 - 함수, if문 등의 블록 안에서 선언변수
 - 함수 등의 실행이 종료되면 메모리에서 사라진다.

전역 변수(global variable)
 - 블록 내에 선언되지 않은 변수들
 - 해당 페이지, 프로그램이 닫히면 메모리에서 사라진다


문자의 크기 비교
"a" < "z" 는 true?
숫자 , a~z 순서

------- = 으로 대입했을 때---------------
<call by value(값을 복사)> - 숫자, text(JS만)
a=15
b=15
c=a+b

a=10
c=a+b -> 25
a=c
c=a+b -> 40

<call by reference(값을 참조)> - 객체들, 배열, 함수 등
arr1[0]=1
arr1[1]=2
arr2=arr1
arr1[0]=3
arr2[0]=?? -> 3
(arr1을 복사한 것 X 참조한 것 O
->참조하기 때문에 값이 변해도 연동됨)
---------------------------------------

객체를 복사하지 않고 참조하는 이유
메모리 관리
 - 용량이 큰 객체가 무한정 복사되어 메모리가 부족해지는 것을 방지






-----------------------------------------
1. 함수 만들기 + return
2. 객체 개념
 - 속성&속성값 개념
3. 조건문, 반복문, 배열 복습
4. 계산 5문제, 버튼 눌러서 오답 확인하기
 - 뺄셈 계산 시 앞의 숫자가 더 커야 함
----------------------------------------



12개
1페이지 3개
총 4페이지
1p : 1 2 3
2p : 4 5 6
3p : 7 8 9
4p : 10 11 12




