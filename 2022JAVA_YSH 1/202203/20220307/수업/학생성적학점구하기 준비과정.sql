--학생, 학과, 년도, 학기, ---> 수강신청결과 
SELECT A.STU_ID, A.STU_NAME, 
       MAX(A.COM_ID) AS PART_ID, 
       MAX(A.COM_VAL) AS PART_NAME,
       MAX(A.DO_YEAR) AS DO_YEAR, 
       MAX(A.SEMESTER) AS SEMESTER,
       ROUND(AVG(NVL(C.SCORE,0)), 2) AS AVERAGE,
       SUM(NVL(C.SCORE, 0)) AS TLTSCORE,
       --학점 보여주고
       RANK() OVER(PARTITION BY MAX(A.COM_ID) ORDER BY ROUND(AVG(NVL(C.SCORE,0)), 2) DESC) AS RNK
       , PKG_SCORES.FUNC_GET_AVERAGE(A.STU_ID ,'2018', '1') AS GRADE
       ,RANK() OVER(PARTITION BY MAX(A.COM_ID) ORDER BY PKG_SCORES.FUNC_GET_AVERAGE(A.STU_ID ,'2018', '1') DESC) AS RNK_GRADE
 FROM
(
    SELECT T1.STU_ID, T1.STU_NAME, T2.COM_ID, T2.COM_VAL, T3.DO_YEAR, T3.SEMESTER, T4.SUB_ID, T4.SUB_NAME
    FROM STUDENTS_TBL T1, COMMONS_TBL T2, STUDENTS_TIME_TBL T3, SUBJECTS_TBL T4
    WHERE T1.STU_DEPT_GRP = T2.GRP_ID
    AND T1.STU_DEPT = T2. COM_ID
    AND T1.STU_ID = T3.STU_ID
    AND T3.SUB_ID = T4.SUB_ID
    AND T3.DO_YEAR = '2018' AND T3.SEMESTER = '1'
) A
,
(
    SELECT GUBUN
    FROM SCORES_TBL
    WHERE DO_YEAR = '2018' AND SEMESTER = '1'
    GROUP BY GUBUN
) B
,SCORES_TBL C
WHERE A.STU_ID = C.STU_ID(+)  AND  A.SUB_ID = C.SUB_ID(+) AND B.GUBUN = C.GUBUN(+)
GROUP BY A.STU_ID, A.STU_NAME
;

--COMMONS_TBL 성적처리기준 등록
SELECT * FROM GRPCOMMONS_TBL;
INSERT INTO GRPCOMMONS_TBL VALUES('GRP004', '학점성적처리기준');
--COMMIT;

--90점이상이면 A   4.5
--80점이상 90미만 B 3.5
--70점이상 80미만 C 2.5
--60점이상 70미만 D 1.5
--60점미만       F 0

SELECT * FROM COMMONS_TBL
WHERE GRP_ID = 'GRP004'
;
--COMMIT;
INSERT INTO COMMONS_TBL VALUES('COM4000', 'GRP004', 'ROOT', 0, 'ROOT',     NULL, NULL, NULL);
INSERT INTO COMMONS_TBL VALUES('COM0001', 'GRP004', '학점 A', 1, 'COM4000', 4.5 , 90, 101);
INSERT INTO COMMONS_TBL VALUES('COM0002', 'GRP004', '학점 B', 1, 'COM4000', 3.5,  80, 90);
INSERT INTO COMMONS_TBL VALUES('COM0003', 'GRP004', '학점 C', 1, 'COM4000', 2.5,  70, 80);
INSERT INTO COMMONS_TBL VALUES('COM0004', 'GRP004', '학점 D', 1, 'COM4000', 1.5,  60, 70);
INSERT INTO COMMONS_TBL VALUES('COM0005', 'GRP004', '학점 F', 1, 'COM4000', 0,     0, 60);

SELECT * FROM STUDENTS_TIME_TBL
;

SELECT ROUND(SUM(TLT_GRADE_POINT) / SUM(SUB_CREDIT),2) AS YOUR_GRADE
FROM
(
    SELECT SUB_ID, SCORE, SUB_CREDIT 
           ,PKG_SCORES.FUNC_GET_GRADE(NVL(SCORE, 0)) AS GRADE_POINT
           ,SUB_CREDIT * PKG_SCORES.FUNC_GET_GRADE(NVL(SCORE, 0)) AS TLT_GRADE_POINT
    FROM
    (
        SELECT D.SUB_ID, AVG(D.SCORE) AS SCORE, MAX(D.SUB_CREDIT) AS SUB_CREDIT
        FROM
        (
            SELECT A.STU_ID, A.DO_YEAR, A.SEMESTER, A.SUB_ID, A.SUB_CREDIT, NVL(C.SCORE, 0) AS SCORE, B.GUBUN
                   --,PKG_SCORES.FUNC_GET_GRADE(NVL(C.SCORE, 0)) AS GRADE_POINT
                   --,A.SUB_CREDIT * PKG_SCORES.FUNC_GET_GRADE(NVL(C.SCORE, 0)) AS TLT_GRADE_POINT
            FROM
            (
                SELECT T1.STU_ID, T2.SUB_ID, T2.SUB_CREDIT, T1.DO_YEAR, T1.SEMESTER
                FROM STUDENTS_TIME_TBL T1, SUBJECTS_TBL T2
                WHERE T1.SUB_ID = T2.SUB_ID AND T1.STU_ID = 'STU001'
                AND T1.DO_YEAR = '2018' AND T1.SEMESTER = '1'
            ) A
            ,
            ( SELECT GUBUN FROM SCORES_TBL WHERE DO_YEAR = '2018' AND SEMESTER = '1' GROUP BY GUBUN  ) B
            , SCORES_TBL C
            WHERE A.STU_ID = C.STU_ID(+) AND A.SUB_ID = C.SUB_ID(+) AND B.GUBUN = C.GUBUN(+)
        ) D
        GROUP BY D.SUB_ID
    )
)
;



SELECT PKG_SCORES.FUNC_GET_GRADE(73.14) FROM DUAL;
