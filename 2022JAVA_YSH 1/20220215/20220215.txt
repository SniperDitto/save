

문자 : VARCHAR2
숫자 : NUMBER

11g 이후 버전부터 한글 1자당 크기3

문자열 표현시 ''

- insert 이후 데이터 삽입했다고 해서 저장된 것이 아님(COMMIT필요)
- COMMIT은 반드시 주석처리

ORACLE 에서 =는 같다는 의미

조회하기 : 조건을 만족하는 ROW 찾기

AND : 교집합
OR : 합집합
 -> 데이터베이스의 AND, OR은 프로그램처럼 참과 거짓을 따지는 조건이 아니다

문자열 비교 : 사전순서비교


조회 select
 - ROW
수정 Update
 - 조건에 맞는 ROW의 특정 필드
입력 insert
 - ROW
삭제 Delete
 - 조건에 맞는 ROW 삭제



관계형 데이터베이스 RDBMS
- 데이터를 어떻게 저장하면 효과적으로 조회할 수 있을까?
=객체지향 데이터베이스

RELATION
DATABASE
MANAGEMENT
SYSTEM



TABLE을 만들어서 데이터 저장
- 어떻게 테이블을 만들어서 저장할 것인가?
=> 정규화 NORMALIZATION

제1정규화
 - 테이블의 모든 필드는 다른 필드에 독립적이어야 한다.
 - 테이블의 어떤 필드도 다른 필드에 영향을 받으면 안 된다.(점수 - 평균 X)
 - 중복된 데이터를 만들지 말기

제2정규화
 - 엔티티와 엔티티의 관계(행위) = 새로운 테이블
 - 1대다 / 다대다 관계

제3정규화
제4정규화(역정규화)


데이터 DATA
- 행위와 엔티티에 의해 발생
- 가공되지 않은 원래 그대로의 것
- 행위를 할 때마다 데이터가 쌓이도록 한다

정보 INFORMATION
- 데이터를 가공해서 원하는 정보를 나타낸 것


숙제
하나의 문장을 정하고 테이블을 만들어서 데이터를 만들어보자
(엔티티+행위)
- 고객이 영화를 예매한다
- 팀이 선수를 구성한다
- 팀 간 경기를 한다(심화/역정규화 포함)


-- 학생 & 과목 : 다대다 관계 (>------<)
-- 학생 & 시험 / 과목 & 시험 : 일대다 관계 (-|------<)

