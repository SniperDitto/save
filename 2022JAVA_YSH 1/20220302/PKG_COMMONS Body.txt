create or replace NONEDITIONABLE PACKAGE BODY PKG_COMMONS AS
    
    
        --GRPCOMMONS_TBL INSERT
      PROCEDURE PROC_INS_GRPCOMMONS
        (
            IN_GRP_NAME   IN  VARCHAR2
        ) AS
        
        V_NEW_GRP_ID    CHAR(6);
        
      BEGIN
        --다음 GRP_ID 만들기
        SELECT 'GRP'||TO_CHAR(TO_NUMBER(SUBSTR(TRIM(MAX(GRP_ID)),4,3))+1,'FM000')
        INTO V_NEW_GRP_ID
        FROM GRPCOMMONS_TBL
        ;
        
        --만든 번호와 이름으로 INSERT
        INSERT INTO GRPCOMMONS_TBL(GRP_ID, GRP_NAME) 
        VALUES(V_NEW_GRP_ID, IN_GRP_NAME)
        ;
        
      END PROC_INS_GRPCOMMONS;
        
        
        
        --GRPCOMMONS_TBL SELECT
      PROCEDURE PROC_SEL_GRPCOMMONS
        (
            IN_GRP_ID       IN      VARCHAR2
            ,IN_GRP_NAME    IN      VARCHAR2
            ,O_CUR          OUT     SYS_REFCURSOR
        ) AS
      BEGIN
        
        OPEN O_CUR FOR
        SELECT * FROM GRPCOMMONS_TBL
        WHERE GRP_ID LIKE '%'|| IN_GRP_ID||'%'
        AND GRP_NAME LIKE '%'|| IN_GRP_NAME||'%'
        ;
      END PROC_SEL_GRPCOMMONS;
        
        
        
        
        --GRPCOMMONS_TBL UPDATE
      PROCEDURE PROC_UP_GRPCOMMONS
        (
            IN_GRP_ID     IN  VARCHAR2
            ,IN_GRP_NAME   IN  VARCHAR2
        ) AS
      BEGIN
        UPDATE GRPCOMMONS_TBL
        SET GRP_NAME = IN_GRP_NAME
        WHERE GRP_ID = IN_GRP_ID
        ;
    
      END PROC_UP_GRPCOMMONS;
    
    
    
    
        --GRPCOMMONS_TBL DELETE
      PROCEDURE PROC_DEL_GRPCOMMONS
        (
            IN_GRP_ID     IN  VARCHAR2
        ) AS
      BEGIN
        DELETE FROM GRPCOMMONS_TBL
        WHERE GRP_ID = IN_GRP_ID
        ;
      END PROC_DEL_GRPCOMMONS;
  
  -----------------------------------
        --COMMONS
        --COMMONS_TBL INSERT
      PROCEDURE PROC_INS_COMMONS
        (
            IN_GRP_ID       IN  VARCHAR2
            ,IN_COM_VAL     IN  VARCHAR2
            ,IN_COM_LVL     IN  VARCHAR2
            ,IN_PARENT_ID   IN  VARCHAR2
        ) AS
        
        V_NEW_COM_ID    CHAR(7);
        V_GRP_CNT       NUMBER(3);
        V_NEW_ROOT_ID   CHAR(7);
        
      BEGIN
        --표에 없는 새로운 GRP_ID값이 들어오면
        --새로운 GRP_ID 생성
        SELECT COUNT(*)
        INTO V_GRP_CNT
        FROM COMMONS_TBL
        WHERE GRP_ID=IN_GRP_ID
        ;
        
        IF V_GRP_CNT=0 THEN
            --새로운 PARENT_ID 생성
            SELECT 'COM'||TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(COM_ID),4,1)),-1)+1)||'000'
            INTO V_NEW_ROOT_ID
            FROM COMMONS_TBL
            WHERE PARENT_ID='ROOT'
            ;
            INSERT INTO COMMONS_TBL(COM_ID, GRP_ID, COM_VAL, COM_LVL, PARENT_ID)
            VALUES(V_NEW_ROOT_ID, IN_GRP_ID, 'ROOT', 0, 'ROOT')
            ;
            
            
            --다음 COM_ID 만들기
            SELECT 'COM'||TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(COM_ID),4,4)),0)+1,'FM0000')
            INTO V_NEW_COM_ID
            FROM COMMONS_TBL
            WHERE GRP_ID=IN_GRP_ID
            AND PARENT_ID!='ROOT'
            ;
            
            --새로운 PARENT_ID + 입력받은 값으로 INSERT
            INSERT INTO COMMONS_TBL(COM_ID, GRP_ID, COM_VAL, COM_LVL, PARENT_ID)
            VALUES(V_NEW_COM_ID, IN_GRP_ID, IN_COM_VAL, IN_COM_LVL, V_NEW_ROOT_ID)
            ;
            
        ELSE
        
            --다음 COM_ID 만들기
            SELECT 'COM'||TO_CHAR(NVL(TO_NUMBER(SUBSTR(MAX(COM_ID),4,4)),0)+1,'FM0000')
            INTO V_NEW_COM_ID
            FROM COMMONS_TBL
            WHERE GRP_ID=IN_GRP_ID
            AND PARENT_ID!='ROOT'
            ;
            
            --입력된 PARENT_ID로 INSERT
            INSERT INTO COMMONS_TBL(COM_ID, GRP_ID, COM_VAL, COM_LVL, PARENT_ID)
            VALUES(V_NEW_COM_ID, IN_GRP_ID, IN_COM_VAL, IN_COM_LVL, IN_PARENT_ID)
            ;
        
        END IF;
        
      END PROC_INS_COMMONS;
  

END PKG_COMMONS;